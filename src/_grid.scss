/* 
    TODO:: 
  - Icoon voor wordpress maken 
  - Example page maken
  - Uitleg aanpassen:
    - @include max-width
    - $max-width
    - uitleg @include grid-container()
    - uitleg @include grid();
    - uitleg dat sass mag niet hoeft
    - geen position fixed ondersteuning

    NOTE:
    Position fixed does not work
*/

@mixin grid-debug($setting: false) {
  @if ($setting != false) {
    :root {
      --grid-debug: 1px solid var(--grid-color, red);
   }
 } 
}

@mixin grid-max-width($value) {
  :root {
    --grid-max-width: 100%;
  } 
  @media (min-width: #{$value}) {
    :root {
      --grid-max-width: #{$value};
    }
  }
}

@mixin grid-container($width: var(--grid-count), $display: 'flex') {
  $gapFactorCalculator: calc(1 - #{$width} / var(--grid-count) );
  width: calc( (var(--grid-max-width) - (var(--grid-padding) * 2) - ( var(--grid-gap) * #{$gapFactorCalculator}) ) / var(--grid-count)  * #{$width} );
  margin: 0 auto;
  display: $display;

  body[grid=visible] & {
    outline: var(--grid-debug, none); 
  }
}

/* 
* @params
* $columns: how much columns in the grid will it use
* $offset: How the number of columns offset
* $extra: if the column is not the first in the grid, gif it an extra gutter offset from left
* $addPixels: when you want to add pixels, say you want your logo width 2 columns wide + 20px
*/
@mixin grid($columns:null, 
            $offset:0,
            $extra-gutter:false,
            $in-custom-grid: var(--grid-count),
            $operand: 'flex-basis',
            $addPixels: 0px) {

  @if ($columns == null) { @error "You must at least set one param to the grid mixin"; }
  $guttercalculator: calc(1 - #{$columns} / #{$in-custom-grid});
  $offsetcalculator: calc(1 - #{$offset} / #{$in-custom-grid});
  
  @if ($extra-gutter != false) { 
    $extra-gutter: var(--grid-gap); // on max-width
  }
  @else {
    $extra-gutter: 0px;
  }
  body[grid=visible] & {
    outline: var(--grid-debug, none); 
  }
  margin-left: calc( ( 100% / #{$in-custom-grid}  * #{$offset} - (var(--grid-gap) * #{$offsetcalculator} )) + var(--grid-gap) + #{$extra-gutter});
  #{$operand}: calc( 100% / #{$in-custom-grid}  * #{$columns} - (var(--grid-gap) * #{$guttercalculator} ) + #{$addPixels} );
}
